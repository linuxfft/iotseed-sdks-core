cmake_minimum_required(VERSION 3.8)
project(mqtt_client)
set(INCLUDE_DIRECTORIES ../../inc)
include_directories(${INCLUDE_DIRECTORIES})
set (LINK_DIR ../../cmake-build-debug)
link_directories(${LINK_DIR})
add_definitions(-DMG_ENABLE_CALLBACK_USERDATA -DMG_ENABLE_HTTP=0 -DMG_ENABLE_SSL -DMG_ENABLE_THREADS)

SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} -DIOTSEED_DEBUG")
SET(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS} -DIOTSEED_DEBUG")

if(MSVC)
    #	SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} /wd4819")
    #	SET(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS} /wd4819")
    #	SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS} /wd4819")
    #	SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS} /wd4819")
else()
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -W -Wall -Wno-unused-function")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fpermissive -Wshadow -Wextra")
    SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} -g")
    SET(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS} -g")
    SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS} -O3")
    SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS} -O3")
endif()

FIND_PACKAGE (Threads REQUIRED)

if(MSVC)
else()
    set(CMAKE_THREAD_PREFER_PTHREAD TRUE)
    set(THREADS_PREFER_PTHREAD_FLAG TRUE)
    message(${CMAKE_THREAD_LIBS_INIT})
endif()

set(SOURCE_FILES mqtt_client.c)

add_executable(mqtt_client ${SOURCE_FILES})
target_link_libraries (mqtt_client ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(mqtt_client iotseed_sdks_core)
target_link_libraries(mqtt_client uuid)